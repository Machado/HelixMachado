// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Foundation.MultiSite.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "UI")]
    public partial class MultisiteDatasourceFeature : Xunit.IClassFixture<MultisiteDatasourceFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Multisite datasource.feature"
#line hidden
        
        public MultisiteDatasourceFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Multisite datasource", null, ProgrammingLanguage.CSharp, new string[] {
                        "UI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(MultisiteDatasourceFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Multisite datasource_UC1_Standard path")]
        [Xunit.TraitAttribute("FeatureTitle", "Multisite datasource")]
        [Xunit.TraitAttribute("Description", "Multisite datasource_UC1_Standard path")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void MultisiteDatasource_UC1_StandardPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multisite datasource_UC1_Standard path", new string[] {
                        "Ready"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table1.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Social/Twitter Feed",
                        "Datasource Location",
                        "/sitecore/content/Habitat/Global/Social"});
#line 6
 testRunner.Given("Value set to item field", ((string)(null)), table1, "Given ");
#line 9
 testRunner.And("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("User selects Twitter placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.And("User clicks Associate a content item with this component. button on scChromeToolb" +
                    "ar undefined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table2.AddRow(new string[] {
                        "sitecorehabitat"});
#line 12
 testRunner.Then("Following items present in datasource tree", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Multisite datasource_UC2_Query path")]
        [Xunit.TraitAttribute("FeatureTitle", "Multisite datasource")]
        [Xunit.TraitAttribute("Description", "Multisite datasource_UC2_Query path")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void MultisiteDatasource_UC2_QueryPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multisite datasource_UC2_Query path", new string[] {
                        "Ready"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table3.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Social/Twitter Feed",
                        "Datasource Location",
                        "query:/sitecore/content/Habitat/Global/Social"});
#line 19
 testRunner.Given("Value set to item field", ((string)(null)), table3, "Given ");
#line 22
 testRunner.And("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("User selects Twitter placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("User clicks Associate a content item with this component. button on scChromeToolb" +
                    "ar undefined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table4.AddRow(new string[] {
                        "sitecorehabitat"});
#line 25
 testRunner.Then("Following items present in datasource tree", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Multisite datasource_UC3_Query with condition")]
        [Xunit.TraitAttribute("FeatureTitle", "Multisite datasource")]
        [Xunit.TraitAttribute("Description", "Multisite datasource_UC3_Query with condition")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void MultisiteDatasource_UC3_QueryWithCondition()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multisite datasource_UC3_Query with condition", new string[] {
                        "Ready"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table5.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Social/Twitter Feed",
                        "Datasource Location",
                        "query:/sitecore/content//*[@@templatename=\'Social Feeds Folder\']"});
#line 32
 testRunner.Given("Value set to item field", ((string)(null)), table5, "Given ");
#line 35
 testRunner.And("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When("User selects Twitter placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.And("User clicks Associate a content item with this component. button on scChromeToolb" +
                    "ar undefined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table6.AddRow(new string[] {
                        "sitecorehabitat"});
#line 38
 testRunner.Then("Following items present in datasource tree", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Multisite datasource_UC4_Relative path has defined")]
        [Xunit.TraitAttribute("FeatureTitle", "Multisite datasource")]
        [Xunit.TraitAttribute("Description", "Multisite datasource_UC4_Relative path has defined")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void MultisiteDatasource_UC4_RelativePathHasDefined()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multisite datasource_UC4_Relative path has defined", new string[] {
                        "Ready"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table7.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Media/Page Header Media Carousel",
                        "Datasource Location",
                        "./Modules"});
#line 45
 testRunner.Given("Value set to item field", ((string)(null)), table7, "Given ");
#line 48
 testRunner.And("Experience Editor is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.When("User selects Page Header Media Carousel placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.And("User clicks Associate a content item with this component. button on scChromeToolb" +
                    "ar undefined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table8.AddRow(new string[] {
                        "Project"});
            table8.AddRow(new string[] {
                        "Feature"});
            table8.AddRow(new string[] {
                        "Foundation"});
#line 51
 testRunner.Then("Following items present in datasource tree", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table9.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Social/Twitter Feed",
                        "Datasource Location",
                        "site:carousel"});
#line 57
 testRunner.And("Value set to item field", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Multisite datasource_UC5_Item id")]
        [Xunit.TraitAttribute("FeatureTitle", "Multisite datasource")]
        [Xunit.TraitAttribute("Description", "Multisite datasource_UC5_Item id")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void MultisiteDatasource_UC5_ItemId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multisite datasource_UC5_Item id", new string[] {
                        "Ready"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table10.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Social/Twitter Feed",
                        "Datasource Location",
                        "{20507226-1C3B-4D7A-89D4-DE00706E59B6}"});
#line 63
 testRunner.Given("Value set to item field", ((string)(null)), table10, "Given ");
#line 66
 testRunner.And("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.When("User selects Twitter placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("User clicks Associate a content item with this component. button on scChromeToolb" +
                    "ar undefined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table11.AddRow(new string[] {
                        "sitecorehabitat"});
#line 69
 testRunner.Then("Following items present in datasource tree", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table12.AddRow(new string[] {
                        "/sitecore/layout/Renderings/Feature/Social/Twitter Feed",
                        "Datasource Location",
                        "/sitecore/content/Habitat/Global/Social"});
#line 73
 testRunner.And("Value set to item field", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                MultisiteDatasourceFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                MultisiteDatasourceFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
