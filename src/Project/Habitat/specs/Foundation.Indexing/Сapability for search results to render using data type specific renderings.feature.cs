// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Foundation.Indexing
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "UI")]
    public partial class СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderingsFeature : Xunit.IClassFixture<СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderingsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Сapability for search results to render using data type specific renderings.feature"
#line hidden
        
        public СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderingsFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Сapability for search results to render using data type specific renderings", null, ProgrammingLanguage.CSharp, new string[] {
                        "UI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderingsFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Сapability for search results to render using data type specific renderings_UC1_")]
        [Xunit.TraitAttribute("FeatureTitle", "Сapability for search results to render using data type specific renderings")]
        [Xunit.TraitAttribute("Description", "Сapability for search results to render using data type specific renderings_UC1_")]
        [Xunit.TraitAttribute("Category", "mytag")]
        public virtual void СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderings_UC1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Сapability for search results to render using data type specific renderings_UC1_", new string[] {
                        "mytag"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("Habitat website is opened on Main Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("User clicks Search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.And("User enters <xp> into search text field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.And("User presses Enter button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Results title",
                        "Specific rendering"});
            table1.AddRow(new string[] {
                        "New praise for world class experience management platform",
                        "August 24, 2015"});
            table1.AddRow(new string[] {
                        "Sitecore XP rated Best In Class - again",
                        "September 24, 2015"});
#line 11
 testRunner.Then("Following specific renderings were added to News page search results", ((string)(null)), table1, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Results title",
                        "Specific rendering"});
            table2.AddRow(new string[] {
                        "John Doe",
                        "+1 202 555 0162"});
            table2.AddRow(new string[] {
                        "John Doe",
                        "+1 202 555 0148"});
            table2.AddRow(new string[] {
                        "John Doe",
                        "john.doe@sitecorehabitat.com"});
#line 15
 testRunner.And("Following specific renderings were added to Person page search results", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderingsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                СapabilityForSearchResultsToRenderUsingDataTypeSpecificRenderingsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
