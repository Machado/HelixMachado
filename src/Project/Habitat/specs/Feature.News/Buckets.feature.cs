// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.News.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "UI")]
    public partial class BucketsFeature : Xunit.IClassFixture<BucketsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Buckets.feature"
#line hidden
        
        public BucketsFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Buckets", "\tAs a news editor \r\n\tI want an easy structure for my news \r\n\tso that I dont have " +
                    "to worry about where to put articles.", ProgrammingLanguage.CSharp, new string[] {
                        "UI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(BucketsFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Buckets")]
        [Xunit.TraitAttribute("Description", "News_Buckets_UC1_Create a new news article in a news folder_Content Editor")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void News_Buckets_UC1_CreateANewNewsArticleInANewsFolder_ContentEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("News_Buckets_UC1_Create a new news article in a news folder_Content Editor", new string[] {
                        "NeedImplementation"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("Content Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("Admin user is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table1.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/News/News"});
#line 11
 testRunner.And("User selects following item in the Content Tree", ((string)(null)), table1, "And ");
#line 14
 testRunner.When("User selects <News Article> in the Insert chunk of Home tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.And("clicks OK on the Message window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table2.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/News/News/year/month/date/hours/mi" +
                            "nutes/News Article"});
#line 16
 testRunner.Then("news article is automatically placed in a bucket with following item path ia adde" +
                    "d", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Buckets")]
        [Xunit.TraitAttribute("Description", "News_Buckets_UC2_Create a new news article in a news folder_Experience Editor")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void News_Buckets_UC2_CreateANewNewsArticleInANewsFolder_ExperienceEditor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("News_Buckets_UC2_Create a new news article in a news folder_Experience Editor", new string[] {
                        "NeedImplementation"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("Experience Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.And("Admin user is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("Home/Modules/Feature/News/News page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.When("User clicks <Insert page> button on the ribbon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.And("User selects <News Article>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("clicks OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.Then("breadcrumbs contains following path <Home>Modules>Feature>News>News>year>month>da" +
                    "te>hours>minutes>News Article>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Buckets")]
        [Xunit.TraitAttribute("Description", "News_Buckets_UC3_Create new news folder")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void News_Buckets_UC3_CreateNewNewsFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("News_Buckets_UC3_Create new news folder", new string[] {
                        "NeedImplementation"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("Content Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.And("Admin user is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("Content Tree is expanded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/News"});
#line 37
 testRunner.And("following item is selected", ((string)(null)), table3, "And ");
#line 40
 testRunner.And("<Insert from Template> dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("User selects </Project/Habitat/Page Types/News List> template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.And("clicks Insert button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("User inserts new <News Article>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.Then("new bucketed folder created under News", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute()]
        [Xunit.TraitAttribute("FeatureTitle", "Buckets")]
        [Xunit.TraitAttribute("Description", "News_Buckets_UC4_Publish news article placed in a bucket")]
        [Xunit.TraitAttribute("Category", "NeedImplementation")]
        public virtual void News_Buckets_UC4_PublishNewsArticlePlacedInABucket()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("News_Buckets_UC4_Publish news article placed in a bucket", new string[] {
                        "NeedImplementation"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given("Content Editor application is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.And("Admin user is logged in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table4.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/News/News"});
#line 51
 testRunner.And("User selects following item in the Content Tree", ((string)(null)), table4, "And ");
#line 54
 testRunner.When("User selects <News Article> in the Insert chunk of Home tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.And("clicks OK on the Message window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.And("User click Publish Site on the ribbon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item Path"});
            table5.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/News/News/year/month/date/hours/mi" +
                            "nutes/News Article"});
#line 57
 testRunner.And("User opens following item in Experience Editor mode", ((string)(null)), table5, "And ");
#line 60
 testRunner.And("Admin logs out from sitecore backend", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("follows the link http://habitat.test5ua1.dk.sitecore.net/Modules/Feature/News/New" +
                    "s", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.Then("new empty news article is in the bottom of the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                BucketsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                BucketsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
