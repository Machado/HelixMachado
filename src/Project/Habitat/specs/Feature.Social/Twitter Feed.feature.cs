// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Sitecore.Feature.Social.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "UI")]
    public partial class TwitterFeedFeature : Xunit.IClassFixture<TwitterFeedFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Twitter Feed.feature"
#line hidden
        
        public TwitterFeedFeature()
        {
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Twitter Feed", "\tIn order visitors can follow twitter posts on the website\r\n\tAs an editor\r\n\tI wan" +
                    "t to be able to add a twitter feed on pages", ProgrammingLanguage.CSharp, new string[] {
                        "UI"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void SetFixture(TwitterFeedFeature.FixtureData fixtureData)
        {
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_UC1_Twitter feed presents on the page")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC1_Twitter feed presents on the page")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Social_TwitterFeed_UC1_TwitterFeedPresentsOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC1_Twitter feed presents on the page", new string[] {
                        "Ready"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("Social Page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table1.AddRow(new string[] {
                        "Tweets by @sitecorehabitat"});
#line 11
 testRunner.Then("Block with following title is present on the page", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_UC2_Add twitter rendering on the page")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC2_Add twitter rendering on the page")]
        [Xunit.TraitAttribute("Category", "OnlyManual")]
        public virtual void Social_TwitterFeed_UC2_AddTwitterRenderingOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC2_Add twitter rendering on the page", new string[] {
                        "OnlyManual"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("Button <Add a new component> is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("<Select a Rendering> dialog is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.When("Admin selects TwitterFeed rendering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.And("Admin clicks Select button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("Admin selects sitecorehabitat datasource", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("Admin clicks OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("Admin saves changes on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table2.AddRow(new string[] {
                        "Tweets by @sitecorehabitat"});
#line 26
 testRunner.Then("Block with following title is present on the page", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_UC3_Remove twitter rendering from page")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC3_Remove twitter rendering from page")]
        [Xunit.TraitAttribute("Category", "OnlyManual")]
        public virtual void Social_TwitterFeed_UC3_RemoveTwitterRenderingFromPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC3_Remove twitter rendering from page", new string[] {
                        "OnlyManual"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
 testRunner.Given("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.And("TwitterFeed component is present on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.When("Admin clicks <Remove component> button on the rendering menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("TwitterFeed is no longer present on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_UC4_Edit rendering title")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC4_Edit rendering title")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Social_TwitterFeed_UC4_EditRenderingTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC4_Edit rendering title", new string[] {
                        "Ready"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "FieldName",
                        "FieldValue"});
            table3.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Social/sitecorehabitat",
                        "FeedTitle",
                        "Tweets by @sitecore"});
#line 41
 testRunner.Given("Value set to item field", ((string)(null)), table3, "Given ");
#line 44
 testRunner.When("Social Page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "FeedTitle Value"});
            table4.AddRow(new string[] {
                        "Tweets by @sitecore"});
#line 45
 testRunner.Then("Block with following title is present on the page", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "FieldName",
                        "FieldValue"});
            table5.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Social/sitecorehabitat",
                        "FeedTitle",
                        "Tweets by @sitecorehabitat"});
#line 48
 testRunner.And("Value set to item field", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_UC5_Make sure latest posts are shown on the page")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC5_Make sure latest posts are shown on the page")]
        [Xunit.TraitAttribute("Category", "OnlyManual")]
        public virtual void Social_TwitterFeed_UC5_MakeSureLatestPostsAreShownOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC5_Make sure latest posts are shown on the page", new string[] {
                        "OnlyManual"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Username",
                        "Password"});
            table6.AddRow(new string[] {
                        "@sitecorehabitat",
                        "Sitecore54"});
#line 55
 testRunner.Given("@sitecorehabitat account is registered on twitter.com", ((string)(null)), table6, "Given ");
#line 58
 testRunner.And("@sitecorehabitat posted new tweet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("TwitterFeed based on @sitecorehabitat added on main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.When("user refreshes main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("new tweet appears in the TwitterFeed component on the main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_UC6_Add new datasource")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_UC6_Add new datasource")]
        [Xunit.TraitAttribute("Category", "Ready")]
        public virtual void Social_TwitterFeed_UC6_AddNewDatasource()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_UC6_Add new datasource", new string[] {
                        "Ready"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "ParentItemPath",
                        "templateItemPath"});
            table7.AddRow(new string[] {
                        "Twitter Feed",
                        "/sitecore/content/Habitat/Global/Social/",
                        "/sitecore/templates/Project/Common/Content Types/Social/Twitter Feed"});
#line 66
 testRunner.Given("Following items should be added", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "fieldName",
                        "fieldValue"});
            table8.AddRow(new string[] {
                        "/sitecore/content/Habitat/Global/Social/Twitter Feed",
                        "WidgetId",
                        "641815052882804737"});
#line 69
 testRunner.And("Value set to item field", ((string)(null)), table8, "And ");
#line 72
 testRunner.And("Experience Editor is opened on Social Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("User selects Twitter placeholder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.And("User clicks Associate a content item with this component. button on scChromeToolb" +
                    "ar undefined", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Item name"});
            table9.AddRow(new string[] {
                        "sitecorehabitat"});
            table9.AddRow(new string[] {
                        "Twitter Feed"});
#line 75
 testRunner.Then("Following items present in datasource tree", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Social_Twitter Feed_Bug36084_ Place settinfg for configuration number of tweets o" +
            "n Control Properties dialog")]
        [Xunit.TraitAttribute("FeatureTitle", "Twitter Feed")]
        [Xunit.TraitAttribute("Description", "Social_Twitter Feed_Bug36084_ Place settinfg for configuration number of tweets o" +
            "n Control Properties dialog")]
        [Xunit.TraitAttribute("Category", "InProgress")]
        public virtual void Social_TwitterFeed_Bug36084_PlaceSettinfgForConfigurationNumberOfTweetsOnControlPropertiesDialog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Social_Twitter Feed_Bug36084_ Place settinfg for configuration number of tweets o" +
                    "n Control Properties dialog", new string[] {
                        "InProgress"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemPath",
                        "ControlId",
                        "Type",
                        "Value"});
            table10.AddRow(new string[] {
                        "/sitecore/content/Habitat/Home/Modules/Feature/Social",
                        "{0CF58F14-D0F8-4C41-9896-3D69048A0B19}",
                        "TweetsToShow",
                        "4"});
#line 82
 testRunner.Given("Control properties were defined for item", ((string)(null)), table10, "Given ");
#line 85
 testRunner.When("Social Page is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.Then("TwitterFeed component contains 4 tweets", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                TwitterFeedFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                TwitterFeedFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
